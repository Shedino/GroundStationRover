/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE COMMANDS PACKING
package com.MAVLink.aslaradio;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Commands and buttons values sent to MAV
*/
public class msg_commands extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_COMMANDS = 10;
    public static final int MAVLINK_MSG_LENGTH = 18;
    private static final long serialVersionUID = MAVLINK_MSG_ID_COMMANDS;


      
    /**
    * TStamp
    */
    public long TStamp;
      
    /**
    * Left Stick X axis
    */
    public int LSX;
      
    /**
    * LSY
    */
    public int LSY;
      
    /**
    * RSX
    */
    public int RSX;
      
    /**
    * RSY
    */
    public int RSY;
      
    /**
    * BSX
    */
    public int BSX;
      
    /**
    * BSY
    */
    public int BSY;
      
    /**
    * Buttons
    */
    public int Buttons;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket();
        packet.len = MAVLINK_MSG_LENGTH;
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_COMMANDS;
              
        packet.payload.putUnsignedInt(TStamp);
              
        packet.payload.putUnsignedShort(LSX);
              
        packet.payload.putUnsignedShort(LSY);
              
        packet.payload.putUnsignedShort(RSX);
              
        packet.payload.putUnsignedShort(RSY);
              
        packet.payload.putUnsignedShort(BSX);
              
        packet.payload.putUnsignedShort(BSY);
              
        packet.payload.putUnsignedShort(Buttons);
        
        return packet;
    }

    /**
    * Decode a commands message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.TStamp = payload.getUnsignedInt();
              
        this.LSX = payload.getUnsignedShort();
              
        this.LSY = payload.getUnsignedShort();
              
        this.RSX = payload.getUnsignedShort();
              
        this.RSY = payload.getUnsignedShort();
              
        this.BSX = payload.getUnsignedShort();
              
        this.BSY = payload.getUnsignedShort();
              
        this.Buttons = payload.getUnsignedShort();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_commands(){
        msgid = MAVLINK_MSG_ID_COMMANDS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_commands(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_COMMANDS;
        unpack(mavLinkPacket.payload);        
    }

                    
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_COMMANDS -"+" TStamp:"+TStamp+" LSX:"+LSX+" LSY:"+LSY+" RSX:"+RSX+" RSY:"+RSY+" BSX:"+BSX+" BSY:"+BSY+" Buttons:"+Buttons+"";
    }
}
        